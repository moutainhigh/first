<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<context:property-placeholder location="classpath*:spring-config.properties" />

	<!-- 每天晚上1点钟进行通讯录数据同步 -->
	<!-- <bean id="quartzJob" class="com.deppon.dpm.tongxunlu.server.service.impl.QuartzJob"></bean>
	<bean id="jobtask"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<ref bean="quartzJob" />
		</property>
		<property name="targetMethod">
			<value>work</value>
		</property>
	</bean> -->
	
	<!-- 每天早上1点1分执行一次.开始执行一遍 -->
	<!-- <bean id="doTime" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<ref bean="jobtask" />
		</property>
		<property name="cronExpression">
			<value>0 1 1 * * ?</value>
		</property>
	</bean> -->

	<!-- 总管理类 如果将lazy-init='false'那么容器启动就会执行调度程序 -->
	<!-- <bean id="startQuertz" lazy-init="false" autowire="no"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="doTime" />
			</list>
		</property>
	</bean> -->
	<!-- 以上是同步配置. -->

	<bean id="SpringQtzJob"
		class="com.deppon.dpm.module.management.util.CleanAttachmentThread" />
	<bean id="SpringQtzJobMethod"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<ref bean="SpringQtzJob" />
		</property>
		<property name="targetMethod">  <!-- 要执行的方法名称 -->
			<value>execute</value>
		</property>
	</bean>

	<!-- ======================== 调度触发器 ======================== -->
	<bean id="CronTriggerBean" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="SpringQtzJobMethod"></property>
		<property name="cronExpression" value="0 0 6,8,10,12,14,16,18,20 * * ?"></property>
	</bean>

	<!-- ======================== 调度工厂 ======================== -->
	<bean id="SpringJobSchedulerFactoryBean"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="CronTriggerBean" />
			</list>
		</property>
	</bean>


	<!-- 数据源 jndi方式 -->
	<bean id="dpmDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="jdbc/dpmmsds" />
		<property name="resourceRef" value="true" />
	</bean>
	<bean id="oaDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="jdbc/oaorlds" />
		<property name="resourceRef" value="true" />
	</bean>

	<!-- 缺省的数据连接管理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dpmDataSource" />
	</bean>

	<!-- 数据连接管理 -->
	<bean id="oaTransactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="oaDataSource" />
	</bean>

	<bean name="appProfile" class="com.deppon.ar.bamp.common.config.AppProfile"
		init-method="initAppProfile">
		<property name="appCode" value="MAPP"></property>
		<property name="actionExtension">
			<list>
				<value>action</value>
				<value>do</value>
			</list>
		</property>
	</bean>


	<bean name="logSwitch" class="com.deppon.ar.bamp.common.dispatch.switchs.LogSwitch"
		init-method="initLogSwitch">
		<property name="localReqLogSwitch" value="1"></property>
	</bean>
	<!-- 事务注解支持 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- ##MQ的ip信息 -->
	<bean name="activeMQUtil" class="com.deppon.ar.bamp.client.jms.ActiveMQUtil"
		init-method="startConnectionFactory">
		<property name="brokerUrl" value="${brokerUrl}"></property>
	</bean>

	<!-- 日志队列配置开始 -->
	<context:annotation-config />
	<context:component-scan base-package="com.deppon" />

	<!-- 日志队列配置开始 -->
	<!-- 异常日志 -->
	<bean id="exceptionLog"
		class="com.deppon.foss.framework.server.components.logger.LogBuffer">
		<property name="enable" value="${log.enable}" /> <!-- 默认启用 -->
		<property name="queueSize" value="${log.queueSize}" />
		<property name="listSize" value="${log.listSize}" />
	</bean>

	<!-- 性能日志 -->
	<bean id="performanceLog"
		class="com.deppon.foss.framework.server.components.logger.LogBuffer">
		<property name="enable" value="${log.enable}" /><!-- 默认启用 -->
		<property name="queueSize" value="${log.queueSize}" />
		<property name="listSize" value="${log.listSize}" />
		<property name="interval" value="${log.interval}" />
	</bean>
	<!-- 日志队列配置结束 -->

	<!-- 推送地址 -->
	<bean id="tpushAddressService"
		class="com.deppon.dpm.module.news.server.service.impl.TpushAddressService">
		<property name="tpushAddress" value="${tpush.address}"></property>
		<property name="tpushAppKey" value="${tpush.appkey}"></property>
		<property name="tpushMasterSercret" value="${tpush.master.sercret}"></property>
		<property name="tpushTimeLive" value="${tpush.time.live}"></property>
	</bean>

	<!-- 图片存储地址 -->
	<bean id="photoAddressService"
		class="com.deppon.dpm.module.common.server.service.impl.PhotoAddressService">
		<property name="headPortraitAddress" value="${tongxunlu.head.portrait}"></property>
		<property name="taskPhotoAddress" value="${task.photo}"></property>
		<property name="feedBackAddress" value="${feedback.picture.dir}"></property>
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref bean="dpmDataSource" />
		</property>
	</bean>

	<bean id="oaJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref bean="oaDataSource" />
		</property>
	</bean>

	<bean id="SpringContextUtil" class="com.deppon.dpm.tongxunlu.server.util.SpringContextUtil">
	</bean>
	<context:component-scan base-package="com.deppon" />
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="/WEB-INF/ibatis.xml" />
		<property name="mapperLocations"
			value="classpath*:com/deppon/**/META-INF/ibatis/*.xml" />
		<property name="dataSource" ref="dpmDataSource" />
	</bean>
	<bean id="tongxunLuService"
		class="com.deppon.dpm.tongxunlu.server.service.impl.TongxunLuService">
		<property name="empDao" ref="empDao"></property>
		<property name="orgDao" ref="orgDao"></property>
		<property name="systemConfigDao" ref="systemConfigDao"></property>
		<property name="personlyImageService" ref="personlyImageService"></property>
	</bean>
	<bean id="systemConfigService"
		class="com.deppon.dpm.tongxunlu.server.service.impl.SystemConfigService">
		<property name="systemConfigDao" ref="systemConfigDao"></property>
	</bean>
	<bean id="jpushService"
		class="com.deppon.dpm.tongxunlu.server.service.impl.PushService">
		<property name="dao" ref="jpushDao"></property>
	</bean>
	<!-- zxy 20140808 DPM-299 start 新增:数据同步服务 -->
	<!-- <bean id="syncBaseDataService"
		class="com.deppon.dpm.tongxunlu.server.service.impl.SyncBaseDataService">
		<property name="orgDao" ref="orgDao" />
		<property name="empDao" ref="empDao" />
		<property name="oaJdbcTemplate" ref="oaJdbcTemplate" />
	</bean> -->

	<!-- <bean id="omConfigDao" class="com.deppon.dpm.tongxunlu.server.dao.impl.OmConfigDao" />
	<bean id="omConfigService"
		class="com.deppon.dpm.tongxunlu.server.service.impl.OmConfigService">
		<property name="omConfigDao" ref="omConfigDao" />
	</bean> -->
	<!-- zxy 20140808 DPM-299 end 新增:数据同步服务 -->

	<bean id="empDao" class="com.deppon.dpm.tongxunlu.server.dao.impl.EmployeeDao">
		<property name="template" ref="jdbcTemplate" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	<bean id="jpushDao" class="com.deppon.dpm.tongxunlu.server.dao.impl.JPushDao">
		<property name="template" ref="jdbcTemplate" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	<bean id="systemConfigDao"
		class="com.deppon.dpm.tongxunlu.server.dao.impl.SystemConfigDao">
		<property name="template" ref="jdbcTemplate" />
	</bean>
	<bean id="orgDao"
		class="com.deppon.dpm.tongxunlu.server.dao.impl.OrganizationDao">
		<property name="template" ref="jdbcTemplate" />
	</bean>
	<!-- TODO -->
	<bean id="jpushAction" class="com.deppon.dpm.tongxunlu.server.action.JpushAction"
		scope="prototype">
		<property name="jpushService" ref="jpushService" />
		<property name="iTpushNewsService" ref="iTpushNewsService" />
	</bean>
	<bean id="tongxunlu" class="com.deppon.dpm.tongxunlu.server.action.TongxunluAction"
		scope="prototype">
		<property name="tongxunLuService" ref="tongxunLuService" />
		<property name="appVersionConfigService" ref="appVersionConfigService" />
		<property name="personlyImageService" ref="personlyImageService"></property>
	</bean>
	<bean id="appVersionConfigDao"
		class="com.deppon.dpm.tongxunlu.server.dao.impl.AppVersionConfigDao"
		scope="prototype">
	</bean>
	<bean id="appVersionConfigService"
		class="com.deppon.dpm.tongxunlu.server.service.impl.AppVersionConfigService"
		scope="prototype">
		<property name="appVersionConfigDao" ref="appVersionConfigDao" />
	</bean>

	<!-- YB增加DPAP数据缓存 -->
	<bean id="storage"
		class="com.deppon.dpm.login.server.cache.DefaultLocalCacheStorage">
	</bean>

	<!-- YB增加DPAP数据缓存池 -->
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxActive" value="${redis.pool.maxActive}"></property>
		<property name="maxIdle" value="${redis.pool.maxIdle}"></property>
		<property name="maxWait" value="${redis.pool.maxWait}"></property>
		<property name="testOnBorrow" value="${redis.pool.testOnBorrow}"></property>
		<property name="testOnReturn" value="${redis.pool.testOnReturn}"></property>
	</bean>

	<!-- YB增加DPAP数据缓存 -->
	<bean id="client" class="com.deppon.foss.framework.cache.redis.RedisClient">
		<property name="host1" value="${redis.host1}"></property>
		<property name="port1" value="${redis.port1}"></property>
		<property name="poolConfig" ref="poolConfig"></property>
	</bean>

	<!-- redis缓存 -->
	<bean id="redisCacheStorage"
		class="com.deppon.foss.framework.cache.storage.RedisCacheStorage">
		<property name="client" ref="client" />
	</bean>

	<!-- 我的任务 -->
	<bean id="taskAction" class="com.deppon.dpm.uums.server.action.TaskAction"
		scope="prototype">
		<property name="taskService" ref="taskService"></property>
	</bean>

	<bean id="taskService" class="com.deppon.dpm.uums.server.service.impl.TaskService">
		<property name="taskDao" ref="taskDao"></property>
		<property name="pushService" ref="tpushNewsService"></property>
	</bean>

	<bean id="taskDao" class="com.deppon.dpm.uums.server.dao.impl.TaskDao" />

	<bean id="personlyImageService"
		class="com.deppon.dpm.tongxunlu.server.service.impl.PersonlyImageService">
		<property name="personlyImageDao" ref="personlyImageDao" />
		<property name="photoAddressService" ref="photoAddressService" />
		<property name="webUrl" value="${dmp.announce.webUrl}"></property>
	</bean>
	<bean id="personlyImageDao"
		class="com.deppon.dpm.tongxunlu.server.dao.impl.PersonlyImageDao" />
	<bean id="perSonlyPicAction"
		class="com.deppon.dpm.tongxunlu.server.action.PersonlyPicAction">
		<property name="personlyImageService" ref="personlyImageService"></property>
	</bean>

	<bean id="dpmEhcacheManager"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<!-- 指定配置文件的位置 -->
		<property name="configLocation" value="/WEB-INF/ehcache.xml" />
	</bean>

	<!-- 定义一个Ehcache -->
	<bean id="dpmCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
		<property name="cacheName" value="dpmEhcache" />
		<property name="cacheManager" ref="dpmEhcacheManager" />
	</bean>

	<bean class="com.deppon.dpm.module.common.server.util.DpmCacheManager">
		<property name="cache" ref="dpmCache" />
		<property name="redisCacheStorage" ref="redisCacheStorage" />
	</bean>

	<bean class="com.deppon.dpm.login.server.interceptor.CheckUrlInterceptor">
		<property name="loginInfoService" ref="loginInfoService" />
	</bean>
</beans>
