<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/context 
			http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/jee 
			http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
			http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
			http://www.springframework.org/schema/aop 
			http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
			default-autowire="byName" default-lazy-init="true">
			
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
   		<!--  使用locations属性定义多个配置文件 -->
        <property name="locations">
             <list>
                 <value>classpath:com/deppon/dpm/module/announce/test/META-INF/spring-config.properties</value>
             </list>
    	</property>
    </bean>
    
    <!-- 整合jedis satrt-->
	<!-- jedis连接池配置信息 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="${redis.maxTotal}"></property>
		<property name="maxIdle" value="${redis.maxIdle}"></property>
		<property name="maxWaitMillis" value="${redis.maxWaitMillis}"></property>
		<property name="testOnBorrow" value="${redis.testOnBorrow}"></property>
		<property name="testOnReturn" value="${redis.testOnReturn}"></property>
	</bean>
	<!-- 定义集群连接池 -->
	<bean id="jedisPool" class="redis.clients.jedis.ShardedJedisPool">
		<!-- 连接池的配置 -->
		<constructor-arg index="0" ref="jedisPoolConfig" />
		<!-- 集群信息 -->
		<constructor-arg index="1">
			<list>
				<!-- 第一个节点 -->
				<bean class="redis.clients.jedis.JedisShardInfo">
					<constructor-arg index="0" value="${redis.ip1}" />
					<constructor-arg index="1" value="${redis.port1}" />
					<constructor-arg index="2" value="node1" />
					<property name="password" value="${redis.pass}" />
				</bean>
				<!-- 第二个节点 -->
				<bean class="redis.clients.jedis.JedisShardInfo">
					<constructor-arg index="0" value="${redis.ip2}" />
					<constructor-arg index="1" value="${redis.port2}" />
					<constructor-arg index="2" value="node2" />
					<property name="password" value="${redis.pass}" />
				</bean>
				<!-- 第三个节点 -->
				<bean class="redis.clients.jedis.JedisShardInfo">
					<constructor-arg index="0" value="${redis.ip3}" />
					<constructor-arg index="1" value="${redis.port3}" />
					<constructor-arg index="2" value="node3" />
					<property name="password" value="${redis.pass}" />
				</bean>
				<!-- 第四个节点 -->
				<bean class="redis.clients.jedis.JedisShardInfo">
					<constructor-arg index="0" value="${redis.ip4}" />
					<constructor-arg index="1" value="${redis.port4}" />
					<constructor-arg index="2" value="node4" />
					<property name="password" value="${redis.pass}" />
				</bean>
				<!-- 第五个节点 -->
				<bean class="redis.clients.jedis.JedisShardInfo">
					<constructor-arg index="0" value="${redis.ip5}" />
					<constructor-arg index="1" value="${redis.port5}" />
					<constructor-arg index="2" value="node5" />
					<property name="password" value="${redis.pass}" />
				</bean>
				<!-- 第六个节点 -->
				<bean class="redis.clients.jedis.JedisShardInfo">
					<constructor-arg index="0" value="${redis.ip6}" />
					<constructor-arg index="1" value="${redis.port6}" />
					<constructor-arg index="2" value="node6" />
					<property name="password" value="${redis.pass}" />
				</bean>
			</list>
		</constructor-arg>
	</bean>
	<bean id="redisService" class="com.deppon.dpm.module.common.server.service.impl.RedisService">
		<property name="jedisPool" ref="jedisPool" />
	</bean>
	<!-- 整合jedis end-->
    
			
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://192.168.68.118:3306/app" />
		<property name="username" value="mysql1" />
		<property name="password" value="mysql1" />
	</bean>

	<!-- 数据连接管理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 事务注解支持 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- myBatis文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- <property name="configLocation" value="com/deppon/dpm/module/announce/test/META-INF/ibatis.xml" /> -->
		<property name="mapperLocations"
			value="classpath*:com/deppon/**/META-INF/ibatis/*.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>
	
	<bean id="announceDao"
		class="com.deppon.dpm.module.announce.server.dao.impl.AnnounceDao" />
	<!-- <bean id="announceService" class="com.deppon.dpm.module.announce.server.service.impl.AnnounceService"/> 
		<property name="host1" value="${redis.host1}"></property> </bean> -->
	<bean id="announceService"
		class="com.deppon.dpm.module.announce.server.service.impl.AnnounceService">
		<property name="announceService" ref="announceService"></property>
		<property name="announceDao" ref="announceDao"></property>
		<property name="webUrl" value="${dmp.announce.webUrl}"></property>
	</bean>

	<bean id="announceAction"
		class="com.deppon.dpm.module.announce.server.action.AnnounceAction" />

	<bean id="announceUserDao"
		class="com.deppon.dpm.module.announce.server.dao.impl.AnnounceUserDao" />
	<bean id="announceUserService"
		class="com.deppon.dpm.module.announce.server.service.impl.AnnounceUserService" />
	<!-- 公告增加缓存配置 -->
	<!-- <bean id="announceProvider" class="com.deppon.dpm.module.announce.server.cache.AnnounceProvider"> 
		<property name="announceService" ref="announceService"></property> </bean> 
		<bean id="peerInfoCache" class="com.deppon.dpm.module.announce.server.cache.AnnounceCache"> 
		<property name="cacheProvider" ref="announceProvider"></property> <property 
		name="cacheStorage" ref="storage"></property> <property name="timeOut" value="600"></property> 
		</bean> -->

	<bean id="announceLogDao"
		class="com.deppon.dpm.module.announce.server.dao.impl.AnnounceLogDao" />
	<bean id="announceLogService"
		class="com.deppon.dpm.module.announce.server.service.impl.AnnounceLogService" />
	<bean id="synAnnounceService"
		class="com.deppon.dpm.module.announce.server.service.impl.SynAnnounceService">
		<property name="webUrl" value="${dmp.announce.webUrl}"></property>
		<property name="communitySynNewsUrl" value="${communitySynNewsUrl}"></property>
	</bean>

	<bean id="dpmExpress"
		class="com.deppon.dpm.module.announce.server.action.DpmExpressAction"
		scope="prototype">
		<property name="iExpressService" ref="iExpressService" />
		<property name="redisService" ref="redisService"/>
	</bean>

	<bean id="iExpressService"
		class="com.deppon.dpm.module.announce.server.service.impl.ExpressService">
		<property name="iDpmExpressDao" ref="iDpmExpressDao" />
		<property name="template" ref="jdbcTemplate"/>
	</bean>

	<bean id="iDpmExpressDao"
		class="com.deppon.dpm.module.announce.server.dao.impl.DpmExpressDao" />
		
		
	<bean id="normalQuestionService" class="com.deppon.dpm.module.announce.server.service.impl.NormalQuestionService">
		<property name="normalQuestionDao" ref="normalQuestionDao" />
	</bean>
	<bean id="normalQuestionDao" class="com.deppon.dpm.module.announce.server.dao.impl.NormalQuestionDao"/>

</beans>
